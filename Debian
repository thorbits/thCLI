#========================#
# Debian Linux           #
#========================#

--> a nice file listing: ls -phalANXgs --color=auto --time-style=iso --no-group --group-directories-first
--> if unable to update/lock database: rm /etc/apt/db.lck
--> printf 'y\n' | DEBIAN_FRONTEND=noninteractive apt-get remove --purge -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" linux-image-`uname -r`*
--> list all installed kernels: dpkg -l | grep linux-image | awk '{print$2}' && sudo apt remove --purge linux-image-NAME
--> Add SU user: vim /etc/sudoers , usermod -aG sudo user
--> set console font: sudo dpkg-reconfigure console-setup
--> /etc/default/grub: GRUB_INIT_TUNE="1750 523 1 392 1 523 1 659 1 784 1 1047 1 784 1 415 1 523 1 622 1 831 1 622 1 831 1 1046 1 1244 1 1661 1 1244 1 466 1 587 1 698 1 932 1 1195 1 1397 1 1865 1 1397 1"


# Debian repos update
#========================#
printf '\nUpdating repos and software...\n\n'; echo -e "deb http://ftp.ca.debian.org/debian experimental main contrib\ndeb-src http://ftp.ca.debian.org/debian experimental main contrib\n\ndeb http://security.debian.org/debian-security trixie-security main contrib\ndeb-src http://security.debian.org/debian-security trixie-security main contrib" > /etc/apt/sources.list; apt update; update-grub2 && sed -i 's/set timeout=5/set timeout=1/' /boot/grub/grub.cfg; echo -e '\nPress enter to reboot'; read; reboot

printf '\nUpdating repos and software...\n\n'; echo -e "deb http://ftp.ca.debian.org/debian sid main contrib\ndeb-src http://ftp.ca.debian.org/debian sid main contrib\n\ndeb http://security.debian.org/debian-security trixie-security main contrib\ndeb-src http://security.debian.org/debian-security trixie-security main contrib" > /etc/apt/sources.list; apt update; update-grub2 && sed -i 's/set timeout=5/set timeout=1/' /boot/grub/grub.cfg; echo -e '\nPress enter to reboot'; read; reboot

apt -y install zstd nala sudo fonts-terminus; setfont /usr/share/consolefonts/Uni3-TerminusBold22x11.psf.gz; clear; { echo '1,2,3,4,5' && printf y\n; } | nala fetch --debian sid && nala update; nala full-upgrade -y


# eZkernel Debian vanilla (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git)
#========================#
clear; printf "\n\nWelcome %s, to eZkernel for Debian.\n\nThe latest linux kernel from git.kernel.org will be compiled and installed.\n\n" "$(whoami)"; steps=3; step() { percent=$(( ($1 + 1) * 100 / steps )); printf "\rChecking kernels versions... (%d%%)" $percent; }; step 0; apt-get update -qq; step 1 || { echo -e "\n\nConnection error. Exiting.\n"; exit 1; }; apt-get install -y curl > /dev/null 2>&1; step 2; kver=$(curl -s https://www.kernel.org/ | grep -oP '(?<=<strong>)[^<]+(?=</strong>)' | head -n 2 | tail -n 1); printf "\rChecking kernels versions... Done  \n\nCurrent kernel version: %s\nIt will be updated to:  %s\n\nPress Enter to continue or Ctrl+C to cancel.\n" "$(uname -r)" "$kver"; read && printf 'Checking compilation dependencies...\n\n'; pkgs="build-essential bison bc flex rsync libdw-dev libelf-dev libssl-dev zlib1g-dev libncurses-dev debhelper python3 wget"; total=$(echo "$pkgs" | tr ' ' '\n' | wc -l); count=0; max_len=0; for p in $pkgs; do len=${#p}; (( len > max_len )) && max_len=$len; done; format_str="\rProgress: %3d%% [%-20s] Now installing: %-${max_len}s"; for p in $pkgs; do if ! dpkg-query -W -f="${Status}\n" "$p" 2>/dev/null | grep -q "install ok"; then count=$((count + 1)); percent=$((count * 100 / total)); unit=$((percent / 5)); bar=$(printf '#%.0s' $(seq 1 $unit)); printf "$format_str" "$percent" "$bar" "$p"; apt-get install -y --no-install-recommends "$p" > /dev/null 2>&1; fi; done; printf "\rProgress: %3d%% [%-20s] Installed $total packages.\n\nDownloading kernel sources...\n\n" 100 "$bar"; mkdir -p "kernel/linux-upstream-$kver"; cd "$_"; wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-master.tar.gz; printf 'Extracting kernel sources...\n\n'; tar -zxf *.gz --strip-components=1; rm *.gz; yes '' | make localmodconfig; make menuconfig && time { make -j$(nproc) bindeb-pkg; dpkg -i ~/kernel/*.deb && printf '\n\neZkernel compilation successful for version: %s\n\nCompilation time:\n' "$kver"; }; reboot_system() { echo -e "\nSystem will reboot now.\n\nPress Enter to continue or Ctrl+C to cancel"; read -rp '' && cd; rm -rf ~/kernel; (sed -i 's/^GRUB_TIMEOUT=[0-9]\+/GRUB_TIMEOUT=1/' /etc/default/grub || echo "GRUB_TIMEOUT=1" >> /etc/default/grub); update-grub >/dev/null 2>&1; reboot; }; reboot_system

# eZkde Debian
#========================#
clear; printf "\n\nWelcome %s, to eZkde for Debian.\n\n" "$(whoami)"; printf "KDE 6 (Wayland session) will be installed with audio support (Pipewire) and minimum utilities.\n\nPress Enter to start.\n"; read; printf 'Installing components, this may take a while...\n\n'; apt-get update -qq || { echo -e "\n\nConnection error. Exiting.\n"; exit 1; } && pkgs="wayland-protocols kwin-wayland pipewire pipewire-pulse wireplumber sddm plasma-workspace plasma-nm plasma-discover kinfocenter systemsettings dolphin kitty"; total=$(echo "$pkgs" | tr ' ' '\n' | wc -l); count=0; max_len=0; for p in $pkgs; do len=${#p}; (( len > max_len )) && max_len=$len; done; format_str="\rProgress: %3d%% [%-20s] Now installing: %-${max_len}s"; for p in $pkgs; do if ! dpkg-query -W -f="${Status}\n" "$p" 2>/dev/null | grep -q "install ok"; then count=$((count + 1)); percent=$((count * 100 / total)); unit=$((percent / 5)); bar=$(printf '#%.0s' $(seq 1 $unit)); printf "$format_str" "$percent" "$bar" "$p"; apt-get install -y "$p" > /dev/null 2>&1; fi; done; printf "\rProgress: %3d%% [%-20s] Installed $total components." 100 "$bar" && systemctl enable sddm >/dev/null 2>&1 && reboot_system() { echo -e "\n\neZkde for Debian install complete, system will reboot now.\n\nPress Enter to continue or Ctrl+C to cancel"; read -rp '' && (sed -i 's/^GRUB_TIMEOUT=[0-9]\+/GRUB_TIMEOUT=1/' /etc/default/grub || echo "GRUB_TIMEOUT=1" >> /etc/default/grub); update-grub >/dev/null 2>&1; reboot; }; reboot_system

#========================#
