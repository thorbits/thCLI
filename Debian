#========================#
# Debian Linux           #
#========================#

--> a nice file listing: ls -phalANXgs --color=auto --time-style=iso --no-group --group-directories-first
--> if unable to update/lock database: rm /etc/apt/db.lck
--> printf 'y\n' | DEBIAN_FRONTEND=noninteractive apt-get remove --purge -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" linux-image-`uname -r`*
--> list all installed kernels: dpkg -l | grep linux-image | awk '{print$2}' && sudo apt remove --purge linux-image-NAME
--> Add SU user: vim /etc/sudoers , usermod -aG sudo user
--> set console font: sudo dpkg-reconfigure console-setup
--> /etc/default/grub: GRUB_INIT_TUNE="1750 523 1 392 1 523 1 659 1 784 1 1047 1 784 1 415 1 523 1 622 1 831 1 622 1 831 1 1046 1 1244 1 1661 1 1244 1 466 1 587 1 698 1 932 1 1195 1 1397 1 1865 1 1397 1"


# Debian repos update
#========================#
printf '\nUpdating repos and software...\n\n'; echo -e "deb http://ftp.ca.debian.org/debian experimental main contrib\ndeb-src http://ftp.ca.debian.org/debian experimental main contrib\n\ndeb http://security.debian.org/debian-security trixie-security main contrib\ndeb-src http://security.debian.org/debian-security trixie-security main contrib" > /etc/apt/sources.list; apt update; update-grub2 && sed -i 's/set timeout=5/set timeout=1/' /boot/grub/grub.cfg; echo -e '\nPress enter to reboot'; read; reboot

printf '\nUpdating repos and software...\n\n'; echo -e "deb http://ftp.ca.debian.org/debian sid main contrib\ndeb-src http://ftp.ca.debian.org/debian sid main contrib\n\ndeb http://security.debian.org/debian-security trixie-security main contrib\ndeb-src http://security.debian.org/debian-security trixie-security main contrib" > /etc/apt/sources.list; apt update; update-grub2 && sed -i 's/set timeout=5/set timeout=1/' /boot/grub/grub.cfg; echo -e '\nPress enter to reboot'; read; reboot

apt -y install zstd nala sudo fonts-terminus; setfont /usr/share/consolefonts/Uni3-TerminusBold22x11.psf.gz; clear; { echo '1,2,3,4,5' && printf y\n; } | nala fetch --debian sid && nala update; nala full-upgrade -y


# eZkernel Debian vanilla (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git)
#========================#

clear; printf "\n\nWelcome %s, to eZkernel for Debian.\n\nThe latest kernel in the master branch from git.kernel.org will be compiled and installed.\n\nChecking kernel versions, please wait...\n\n" "$(whoami)"; { apt update -y && apt install -y curl; } > /dev/null 2>&1; printf "Current kernel version: %s\n" "$(uname -r)"; kver=$(curl -s https://www.kernel.org/ | grep -oP '(?<=<strong>)[^<]+(?=</strong>)' | head -n 2 | tail -n 1); printf "It will be updated to:  %s\n\nPress Enter to continue or Ctrl+C to cancel." "$kver"; read; printf '\nInstalling compilation dependencies, please wait...\n'; apt install -y bc bison crossbuild-essential-amd64 debhelper flex libelf-dev libncurses-dev libssl-dev python3 rsync zlib1g-dev wget > /dev/null 2>&1; printf '\nCompilation dependencies updated.\n\nDownloading kernel sources...\n\n'; mkdir -p "kernel/linux-upstream-$kver"; cd "$_"; wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-master.tar.gz; printf 'Extracting kernel sources...\n\n'; tar -zxf *.gz --strip-components=1; rm *.gz; yes '' | make localmodconfig; make menuconfig && printf 'Sources ready. Compilation starting...\n\n'; time { make -j$(nproc) bindeb-pkg; dpkg -i ~/kernel/*.deb; printf '\n\neZkernel compilation successful for version: %s\n\nCompilation time:\n' "$kver"; }; echo -e '\nSystem will reboot now.\n\nPress Enter to continue or Ctrl+C to cancel.'; read; cd; rm -rf ~/kernel; sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=1/' /etc/default/grub; update-grub >/dev/null 2>&1; reboot

beta2 (also added progression to initial kernel checking thus install bc earlier than V1)
clear; printf "\n\nWelcome %s, to eZkernel for Debian.\n\nThe latest kernel in the master branch from git.kernel.org will be compiled and installed.\n\nChecking kernel versions, please wait...\n\n" "$(whoami)"; apt install -y bc > /dev/null 2>&1; total_commands=3; update_percent() { printf "\rProgress: %s" "$(printf '%.0f' $(echo "$1 * 100 / $total_commands" | bc -l))%"; }; update_percent 1; apt update -y > /dev/null 2>&1; update_percent 2; apt install -y curl > /dev/null 2>&1; kver=$(curl -s https://www.kernel.org/ | grep -oP '(?<=<strong>)[^<]+(?=</strong>)' | head -n 2 | tail -n 1); update_percent 3; printf "\n\nCurrent kernel version: %s\n" "$(uname -r)"; printf "It will be updated to:  %s\n\nPress Enter to continue or Ctrl+C to cancel." "$kver"; read; printf '\nInstalling compilation dependencies, please wait...\n\n'; pkgs="bison crossbuild-essential-amd64 debhelper flex libelf-dev libncurses-dev libssl-dev python3 rsync zlib1g-dev wget"; total=$(echo $pkgs | tr ' ' '\n' | wc -l); count=0; for p in $(echo $pkgs | tr ' ' '\n'); do if ! dpkg -l | grep -q "^ii $p"; then apt install -y "$p" >/dev/null 2>&1; fi; count=$((count + 1)); percent=$((count * 100 / total)); bar=$(printf '#%.0s' $(seq 1 $((percent * 9 / 100)))); printf "\r%-5s %d%% [%-9s] Installed %d of %d packages" "Progress:" $percent "$bar" $count $total; done; printf '\n\nCompilation dependencies updated.\n\nDownloading kernel sources...\n\n'; mkdir -p "kernel/linux-upstream-$kver"; cd "$_"; wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-master.tar.gz; printf 'Extracting kernel sources...\n\n'; tar -zxf *.gz --strip-components=1; rm *.gz; yes '' | make localmodconfig; make menuconfig && printf 'Sources ready. Compilation starting...\n\n'; time { make -j$(nproc) bindeb-pkg; dpkg -i ~/kernel/*.deb; printf '\n\neZkernel compilation successful for version: %s\n\nCompilation time:\n' "$kver"; }; echo -e '\nSystem will reboot now.\n\nPress Enter to continue or Ctrl+C to cancel.'; read; cd; rm -rf ~/kernel; sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=1/' /etc/default/grub; update-grub >/dev/null 2>&1; reboot

beta1 (added progress bar to dependencies)
clear; printf "\n\nWelcome %s, to eZkernel for Debian.\n\nThe latest kernel in the master branch from git.kernel.org will be compiled and installed.\n\nChecking kernel versions, please wait...\n\n" "$(whoami)"; { apt update -y && apt install -y curl; } > /dev/null 2>&1; printf "Current kernel version: %s\n" "$(uname -r)"; kver=$(curl -s https://www.kernel.org/ | grep -oP '(?<=<strong>)[^<]+(?=</strong>)' | head -n 2 | tail -n 1); printf "It will be updated to:  %s\n\nPress Enter to continue or Ctrl+C to cancel." "$kver"; read; printf '\nInstalling compilation dependencies, please wait...\n\n'; pkgs="bc bison crossbuild-essential-amd64 debhelper flex libelf-dev libncurses-dev libssl-dev python3 rsync zlib1g-dev wget"; total=$(echo $pkgs | tr ' ' '\n' | wc -l); count=0; for p in $(echo $pkgs | tr ' ' '\n'); do if ! dpkg -l | grep -q "^ii $p"; then apt install -y "$p" >/dev/null 2>&1; fi; count=$((count + 1)); percent=$((count * 100 / total)); bar=$(printf '#%.0s' $(seq 1 $percent)); printf "\r%-5s %d%% [%-100s] Installed %d of %d packages" "Progress:" $percent "$bar" $count $total; done; printf '\n\nCompilation dependencies updated.\n\nDownloading kernel sources...\n\n'; mkdir -p "kernel/linux-upstream-$kver"; cd "$_"; wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-master.tar.gz; printf 'Extracting kernel sources...\n\n'; tar -zxf *.gz --strip-components=1; rm *.gz; yes '' | make localmodconfig; make menuconfig && printf 'Sources ready. Compilation starting...\n\n'; time { make -j$(nproc) bindeb-pkg; dpkg -i ~/kernel/*.deb; printf '\n\neZkernel compilation successful for version: %s\n\nCompilation time:\n' "$kver"; }; echo -e '\nSystem will reboot now.\n\nPress Enter to continue or Ctrl+C to cancel.'; read; cd; rm -rf ~/kernel; sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=1/' /etc/default/grub; update-grub >/dev/null 2>&1; reboot

# eZkde Debian
#========================#
clear; printf "\n\nWelcome %s, to eZkde for Debian.\n\n" "$(whoami)"; printf "KDE 6 (Wayland) desktop will be installed with minimum utilities and audio support.\n\nPress Enter to start.\n"; read; apt update -y >/dev/null 2>&1; apt -y install --no-install-recommends xserver-xorg xserver-xorg-video-vmware sddm kwin-wayland plasma-desktop plasma-discover plasma-workspace plasma-integration plasma-pa plasma-nm plasma-systemmonitor breeze-cursor-theme kde-config-screenlocker kscreen kinfocenter systemsettings kfind pipewire pipewire-pulse wireplumber pulsemixer pavucontrol-qt thunar alacritty fastfetch && sudo -u $(logname) bash -c 'XDG_RUNTIME_DIR=/run/user/$(id -u) DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus systemctl --user --now enable pipewire pipewire-pulse wireplumber'; systemctl enable sddm; sed -i 's/set timeout=5/set timeout=1/' /boot/grub/grub.cfg; echo -e '\neZkde for Debian install complete.\n\nDefault session: Wayland\nAudio: PipeWire\n\nPress enter to reboot.'; read; reboot


#========================#
